name: publish

permissions:
  packages: write
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Prepare THIRD_PARTY folder
        run: |
          go install github.com/google/go-licenses@v1.0.0
          make third_party
      - name: Release
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
      - uses: actions/upload-artifact@v4
        with:
          name: third_party
          path: THIRD_PARTY

  windows_installer:
    runs-on: windows-2022
    needs: release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: third_party
          path: THIRD_PARTY
      - name: Setup NSIS
        run: |
          Invoke-WebRequest https://myopenfactory.blob.core.windows.net/static/NsProcess.zip -OutFile c:\NsProcess.zip
          Expand-Archive -LiteralPath "C:\NsProcess.zip" -DestinationPath C:\
          Copy-Item "C:\NsProcess\Plugin\nsProcessW.dll" -Destination "C:\Program Files (x86)\NSIS\Plugins\x86-unicode\nsProcess.dll"
          Copy-Item "C:\NsProcess\Include\nsProcess.nsh" -Destination "C:\Program Files (x86)\NSIS\Include\nsProcess.nsh"
          Invoke-WebRequest https://myopenfactory.blob.core.windows.net/static/nsYaml.zip -OutFile c:\nsYaml.zip
          Expand-Archive -LiteralPath "C:\nsYaml.zip" -DestinationPath C:\
          Copy-Item "C:\nsYaml.dll" -Destination "C:\Program Files (x86)\NSIS\Plugins\x86-unicode\nsYaml.dll"
      - name: Build installer
        run: |
          $env:VERSION = $(jq -r '.version' .\dist\metadata.json)
          makensis hacks\installer.nsi
          Remove-Item Env:\VERSION
      - uses: actions/upload-artifact@v4
        with:
          name: edi-connector_installer.exe
          path: hacks/edi-connector_installer.exe
      - uses: actions/github-script@v7
        with:
          script: |
            const owner = 'myopenfactory';
            const repo = 'edi-connector';
            const fs = require('fs');
            const data = fs.readFileSync('hacks/edi-connector_installer.exe');
            
            const { data: tag }= await github.request('GET /repos/{owner}/{repo}/releases/tags/{tag}', {
              owner,
              repo,
              tag: '${{ github.ref_name }}',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            
            github.rest.repos.uploadReleaseAsset({
              owner,
              repo,
              release_id: tag.id,
              name: 'edi-connector_installer.exe',
              data,
            });
